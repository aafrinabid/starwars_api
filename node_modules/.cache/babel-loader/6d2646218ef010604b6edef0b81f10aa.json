{"ast":null,"code":"var _jsxFileName = \"/home/aafrin/starwars-react/src/App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMovies = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n\n      if (!response.ok) {\n        throw new Error('something went wrong!!! its not you its us');\n      }\n\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMovies();\n  }, [fetchMovies]);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://react-http-b5dbb-default-rtdb.firebaseio.com/movies.json', {\n      method: \"POST\",\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Found no movies.\");\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, \"loading.....\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aafrin/starwars-react/src/App.js"],"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovies","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log","content","length"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useCallback} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\n\nfunction App() {\nconst [movies,setMovies]=useState([]);\nconst [isLoading,setIsLoading]=useState(false);\nconst [error,setError]=useState(null);\n\n\n\n  const fetchMovies= useCallback(async()=>{\n    setIsLoading(true);\n    setError(null);\n    try{\n      const response= await fetch('https://swapi.dev/api/films/')\n      if(!response.ok){\n        throw new Error('something went wrong!!! its not you its us')\n      }\n    const data =await response.json();\n   const transformedMovies=data.results.map((movieData)=>{\n        return{\n          id:movieData.episode_id,\n          title:movieData.title,\n          openingText:movieData.opening_crawl,\n          releaseDate:movieData.release_date\n        };\n      })\n      setMovies(transformedMovies);\n      setIsLoading(false);\n\n    } catch(error){\n      setError(error.message);\n    }\n    setIsLoading(false)\n    \n    }\n  ,[])\n  useEffect(()=>{\n    fetchMovies();\n  },[fetchMovies]);\n  \n  async function addMovieHandler(movie){\n    const response=await fetch('https://react-http-b5dbb-default-rtdb.firebaseio.com/movies.json',{\n   method:\"POST\",\n  body:JSON.stringify(movie),\nheaders:{\n  'Content-Type':'application/json'\n} \n});\nconst data=await response.json();\nconsole.log(data) ;\n\n}\n\n    let content=<p>Found no movies.</p>\n   \n\n    if(movies.length>0){\n      content=<MoviesList movies={movies}/>\n    }\n    if(error){\n      content=<p>{error}</p>\n    }\n    \n    \n    if(isLoading){\n      content=<p>loading.....</p>\n    }\n   \n\n\n  return (\n    <React.Fragment>\n      <AddMovie onAddMovie={addMovieHandler}/>\n      <section>\n        <button onClick={fetchMovies}>Fetch Movies</button>\n      </section>\n      <section>\n        {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}