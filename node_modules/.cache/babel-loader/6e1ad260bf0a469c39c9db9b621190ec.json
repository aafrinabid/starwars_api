{"ast":null,"code":"var _jsxFileName = \"/home/aafrin/starwars-react/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function fetchMovies() {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n\n      if (!response.ok) {\n        throw new Error('something went wrong!!! its not you its us');\n      }\n\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 43\n    }\n  }), !isLoading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 43\n    }\n  }, \"no movies found\"), !isLoading && error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }, error), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 22\n    }\n  }, \"loading\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aafrin/starwars-react/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovies","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","length"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACf,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBJ,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACK,SAAD,EAAWC,YAAX,IAAyBN,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM,CAACO,KAAD,EAAOC,QAAP,IAAiBR,QAAQ,CAAC,IAAD,CAA/B;;AAGE,iBAAeS,WAAf,GAA4B;AAC1BH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAG;AACD,YAAME,QAAQ,GAAE,MAAMC,KAAK,CAAC,8BAAD,CAA3B;;AACA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACD;;AACH,YAAMC,IAAI,GAAE,MAAMJ,QAAQ,CAACK,IAAT,EAAlB;AACD,YAAMC,iBAAiB,GAACF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAa;AACjD,eAAM;AACJC,UAAAA,EAAE,EAACD,SAAS,CAACE,UADT;AAEJC,UAAAA,KAAK,EAACH,SAAS,CAACG,KAFZ;AAGJC,UAAAA,WAAW,EAACJ,SAAS,CAACK,aAHlB;AAIJC,UAAAA,WAAW,EAACN,SAAS,CAACO;AAJlB,SAAN;AAMD,OAPoB,CAAxB;AAQGtB,MAAAA,SAAS,CAACY,iBAAD,CAAT;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAED,KAjBD,CAiBE,OAAMC,KAAN,EAAY;AACZC,MAAAA,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;AACD;;AACDrB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEC;;AAGH,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,SAAD,IAAcF,MAAM,CAACyB,MAAP,GAAc,CAA5B,iBAAiC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEzB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpC,EAEG,CAACE,SAAD,IAAcF,MAAM,CAACyB,MAAP,KAAgB,CAA9B,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFpC,EAGG,CAACvB,SAAD,IAAcE,KAAd,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAJ,CAH1B,EAIGF,SAAS,iBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJf,CAJF,CADF;AAaD;;AAED,eAAeH,GAAf","sourcesContent":["import React,{useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\nconst [movies,setMovies]=useState([]);\nconst [isLoading,setIsLoading]=useState(false);\nconst [error,setError]=useState(null);\n\n\n  async function fetchMovies(){\n    setIsLoading(true);\n    setError(null);\n    try{\n      const response= await fetch('https://swapi.dev/api/films/')\n      if(!response.ok){\n        throw new Error('something went wrong!!! its not you its us')\n      }\n    const data =await response.json();\n   const transformedMovies=data.results.map((movieData)=>{\n        return{\n          id:movieData.episode_id,\n          title:movieData.title,\n          openingText:movieData.opening_crawl,\n          releaseDate:movieData.release_date\n        };\n      })\n      setMovies(transformedMovies);\n      setIsLoading(false);\n\n    } catch(error){\n      setError(error.message);\n    }\n    setIsLoading(false)\n    \n    }\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovies}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length>0 && <MoviesList movies={movies}/>}\n        {!isLoading && movies.length===0&&<p>no movies found</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading &&<p>loading</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}