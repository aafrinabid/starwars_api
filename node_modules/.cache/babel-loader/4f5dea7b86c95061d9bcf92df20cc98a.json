{"ast":null,"code":"var _jsxFileName = \"/home/aafrin/starwars-react/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function fetchMovies() {\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const transformedMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 43\n    }\n  }), movies.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 28\n    }\n  }, \"no movies found\") : '', isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 22\n    }\n  }, \"loading\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aafrin/starwars-react/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","fetchMovies","response","fetch","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","length"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACf,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBJ,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACK,SAAD,EAAWC,YAAX,IAAyBN,QAAQ,CAAC,KAAD,CAAvC;;AAGE,iBAAeO,WAAf,GAA4B;AAC1BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAME,QAAQ,GAAE,MAAMC,KAAK,CAAC,8BAAD,CAA3B;AACA,UAAMC,IAAI,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAAlB;AACD,UAAMC,iBAAiB,GAACF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAa;AACjD,aAAM;AACJC,QAAAA,EAAE,EAACD,SAAS,CAACE,UADT;AAEJC,QAAAA,KAAK,EAACH,SAAS,CAACG,KAFZ;AAGJC,QAAAA,WAAW,EAACJ,SAAS,CAACK,aAHlB;AAIJC,QAAAA,WAAW,EAACN,SAAS,CAACO;AAJlB,OAAN;AAMD,KAPoB,CAAxB;AAQGlB,IAAAA,SAAS,CAACQ,iBAAD,CAAT;AACAN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAGH,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,SAAD,IAAcF,MAAM,CAACoB,MAAP,GAAc,CAA5B,iBAAiC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEpB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpC,EAEGA,MAAM,CAACoB,MAAP,KAAgB,CAAhB,gBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAlB,GAAyC,EAF5C,EAGGlB,SAAS,iBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHf,CAJF,CADF;AAYD;;AAED,eAAeH,GAAf","sourcesContent":["import React,{useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\nconst [movies,setMovies]=useState([]);\nconst [isLoading,setIsLoading]=useState(false)\n\n\n  async function fetchMovies(){\n    setIsLoading(true);\n    const response= await fetch('https://swapi.dev/api/films/')\n    const data =await response.json();\n   const transformedMovies=data.results.map((movieData)=>{\n        return{\n          id:movieData.episode_id,\n          title:movieData.title,\n          openingText:movieData.opening_crawl,\n          releaseDate:movieData.release_date\n        };\n      })\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    }\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovies}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length>0 && <MoviesList movies={movies}/>}\n        {movies.length===0?<p>no movies found</p>:''}\n        {isLoading &&<p>loading</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}